{
        "linuxversion": "v4.18-mt20211110.465", 
        "version": "v0.1", 
        "notes": [
                {
                        "note": "当写/proc/sys/kernel/watchdog_cpumask接口时，调用该函数", 
                        "line": 769
                }, 
                {
                        "note": "/proc/sys/kernel/watchdog_cpumask的处理函数", 
                        "line": 760
                }, 
                {
                        "note": "每个watchdog内核线程的task_struct结构体的指针", 
                        "line": 521
                }, 
                {
                        "note": "主要用于判断是否要执行watchdog", 
                        "line": 515
                }, 
                {
                        "note": "检测是否发生softlockup", 
                        "line": 380
                }, 
                {
                        "note": "设置定时器下一次到期时间", 
                        "line": 356
                }, 
                {
                        "note": "唤醒[watchdog/x]内核线程", 
                        "line": 353
                }, 
                {
                        "note": "更新hrtimer_interrupts计数", 
                        "line": 350
                }, 
                {
                        "note": "如果两次NMI时，hrtimer_interrupts的值没有变化，说明irq未能正常触发，即发生了hardlock", 
                        "line": 326
                }, 
                {
                        "note": "这个函数主要就是查看hrtimer_interrupts变量在时钟中断处理函数里有没有被更新。假如没有更新，就意味着中断出了问题，可能被错误代码长时间的关中断了。", 
                        "line": 321
                }, 
                {
                        "note": "get_softlockup_thresh()默认是20s", 
                        "line": 315
                }, 
                {
                        "note": "单位是s", 
                        "line": 311
                }, 
                {
                        "note": "查看touch_ts变量在最近20秒的时间内，有没有被创建的watchdog更新过，如果没有就是线程没有调度，说明[watchdog/x]未得到运行机会，意味着CPU被霸占，调度器没有办法进行调度，也就发生了softlockup", 
                        "line": 309
                }, 
                {
                        "note": "在init/main.c中的函数kernel_init_freeable会调用此初始化函数", 
                        "line": 776
                }, 
                {
                        "note": "根据实际情况，更新变量watchdog_enabled的值", 
                        "line": 592
                }, 
                {
                        "note": "创建内核线程[watchdog/x]", 
                        "line": 595
                }, 
                {
                        "note": "lockup接口写入的配置与之前不同时，需要更新", 
                        "line": 748
                }, 
                {
                        "note": "lockup接口写入的配置与之前不同时，需要更新", 
                        "line": 696
                }, 
                {
                        "note": "当lockup配置变更时，会调用该函数，该函数会调用lockup_detector_reconfigure，来重新配置lockup_detector", 
                        "line": 658
                }
        ], 
        "file": "v4.18-mt20211110.465/kernel/watchdog.c"
}